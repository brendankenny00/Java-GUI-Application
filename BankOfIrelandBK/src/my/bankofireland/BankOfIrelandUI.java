/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package my.bankofireland;

/**
 *
 * @author A00037189
 */
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.io.IOException;
import java.sql.*;
import javax.swing.*;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
/**
 * Class BankOfIrelandUI allows the displaying,adding and deleting of customer records relating to customer accounts
 * on the GUI from the database
 * @author A00037189
 */

public class BankOfIrelandUI extends javax.swing.JFrame {
    /**
     * Creates new form BankOfIrelandUI
     */
    /** String to hold the name*/
    private String CustName;
    /** String to hold the account balance*/
    private String AccBal;
    /** String to hold the account number*/
    private String CustAcc;
    /** String to hold the phone number*/
    private String PhoneNbr;
    /** String to hold the account type*/
    private String AcctType;
    /** String to hold the currency*/
    private String Currency;
    /** String to hold the customer's address*/
    private String CustAddress;
    /** String to hold the loan amount*/
    private String LoanAmount;
    /**Integer to hold the loan duration*/
    private int LoanDur;
    
    /** Connection to hold the con*/
    Connection con;
    /** Statement to hold the stmt*/
    Statement stmt;
    /** ResultSet to hold the rs*/
    ResultSet rs;
    /** Integer to hold the count*/
    int count;
    /** Integer to hold the current*/
    int current;

    /**
     * Constructor to initialize the data
     */
    public BankOfIrelandUI() {
        initComponents();
        con=null;
        stmt=null;
        rs=null;
        count=0;
        int current;
        CustName="";
        CustAcc="";
        AccBal="";
        PhoneNbr="";
        AcctType="";
        Currency="";
        CustAddress="";
        LoanAmount="";
        LoanDur=0;
        
       

        	dbConn();		// method to connect to database using odbc-jdbc
        	initDB();		// method to initialise gui with database info
   
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        accBal = new javax.swing.JTextField();
        cName = new javax.swing.JTextField();
        Student = new javax.swing.JRadioButton();
        Deposit = new javax.swing.JRadioButton();
        Current = new javax.swing.JRadioButton();
        Name = new javax.swing.JLabel();
        CurrencyLbl = new javax.swing.JLabel();
        Account = new javax.swing.JLabel();
        LoanLength = new javax.swing.JLabel();
        aNum = new javax.swing.JTextField();
        Balance = new javax.swing.JLabel();
        BankLogo = new javax.swing.JLabel();
        find = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        CloseAC = new javax.swing.JButton();
        Open = new javax.swing.JButton();
        ForeignEx = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        Previous = new javax.swing.JButton();
        Next = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        duration = new javax.swing.JSlider();
        lAmt = new javax.swing.JLabel();
        PhoneNr = new javax.swing.JLabel();
        PhoneNo = new javax.swing.JTextField();
        Curr = new javax.swing.JComboBox();
        address = new javax.swing.JTextField();
        CuAddress = new javax.swing.JLabel();
        loan = new javax.swing.JTextField();
        AType1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        CustSearch = new javax.swing.JMenuItem();
        ClearDetails = new javax.swing.JMenuItem();
        ExitScreen = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        CloseAcc = new javax.swing.JMenuItem();
        AddNew = new javax.swing.JMenuItem();
        BankAPI = new javax.swing.JMenu();
        API = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();
        Rates = new javax.swing.JMenuItem();
        Fees = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(98, 149, 199));

        accBal.setText("jTextField1");
        accBal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accBalActionPerformed(evt);
            }
        });

        cName.setText("jTextField1");
        cName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cNameActionPerformed(evt);
            }
        });

        Student.setBackground(new java.awt.Color(98, 149, 199));
        buttonGroup1.add(Student);
        Student.setText("Student");
        Student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentActionPerformed(evt);
            }
        });

        Deposit.setBackground(new java.awt.Color(98, 149, 199));
        buttonGroup1.add(Deposit);
        Deposit.setText("Deposit");
        Deposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepositActionPerformed(evt);
            }
        });

        Current.setBackground(new java.awt.Color(98, 149, 199));
        buttonGroup1.add(Current);
        Current.setText("Current");
        Current.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrentActionPerformed(evt);
            }
        });

        Name.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        Name.setText("Customer Name");
        Name.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        CurrencyLbl.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        CurrencyLbl.setText("Currency");
        CurrencyLbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Account.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        Account.setText("Account Number");
        Account.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        LoanLength.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        LoanLength.setText("Loan Duration");
        LoanLength.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        aNum.setText("jTextField1");

        Balance.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        Balance.setText("Account Balance");
        Balance.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        BankLogo.setFont(new java.awt.Font("Calibri", 3, 24)); // NOI18N
        BankLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bankofirelandbk/boigm2.png"))); // NOI18N
        BankLogo.setText("Bank Of Ireland Accounts Admin");
        BankLogo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BankLogo.setPreferredSize(new java.awt.Dimension(468, 115));

        find.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        find.setText("Customer Search");
        find.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        Update.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        Update.setText("Update Account");
        Update.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        CloseAC.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        CloseAC.setText("Close Account");
        CloseAC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CloseAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseACActionPerformed(evt);
            }
        });

        Open.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        Open.setText("Open New Account");
        Open.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });

        ForeignEx.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        ForeignEx.setText("FX Rates");
        ForeignEx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ForeignExActionPerformed(evt);
            }
        });

        Exit.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        Previous.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        Previous.setText("Previous Record");
        Previous.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviousActionPerformed(evt);
            }
        });

        Next.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        Next.setText("Next Record");
        Next.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });

        Clear.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        Clear.setText("Clear");
        Clear.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        duration.setBackground(new java.awt.Color(98, 149, 199));
        duration.setMajorTickSpacing(5);
        duration.setMaximum(20);
        duration.setPaintLabels(true);
        duration.setPaintTicks(true);
        duration.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                durationStateChanged(evt);
            }
        });

        lAmt.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lAmt.setText("Loan Amount");
        lAmt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        PhoneNr.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        PhoneNr.setText("Phone Number");
        PhoneNr.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        PhoneNo.setText("jTextField1");

        Curr.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EUR", "GBP", "USD", "AUD", "CAD", "PLN", "ZAR", "PLN", "CHF", "AED", " " }));
        Curr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrActionPerformed(evt);
            }
        });

        address.setText("jTextField1");

        CuAddress.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        CuAddress.setText("Address");
        CuAddress.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        loan.setText("jTextField1");

        AType1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        AType1.setText("Account Type");
        AType1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BankLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ForeignEx, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(CloseAC, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Previous, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Next, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Open, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 39, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Account, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(CurrencyLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Balance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LoanLength, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(PhoneNr, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(CuAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lAmt, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                            .addComponent(AType1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Curr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 8, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(Current)
                                        .addGap(74, 74, 74))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(Deposit)
                                        .addGap(205, 205, 205)))
                                .addComponent(Student)
                                .addGap(3, 3, 3))
                            .addComponent(loan, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(aNum, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PhoneNo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(duration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(accBal)
                            .addComponent(address)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(BankLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Account, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CurrencyLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Curr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accBal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Balance))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CuAddress))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AType1)
                    .addComponent(Deposit)
                    .addComponent(Current)
                    .addComponent(Student))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lAmt)
                    .addComponent(loan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(LoanLength)
                        .addGap(34, 34, 34)
                        .addComponent(PhoneNr))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(duration, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Open, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Next, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Previous, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ForeignEx, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CloseAC, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        File.setText("File");

        CustSearch.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK));
        CustSearch.setText("CustomerSearch");
        CustSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustSearchActionPerformed(evt);
            }
        });
        File.add(CustSearch);

        ClearDetails.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK));
        ClearDetails.setText("Clear Details");
        ClearDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearDetailsActionPerformed(evt);
            }
        });
        File.add(ClearDetails);

        ExitScreen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK));
        ExitScreen.setText("Exit");
        ExitScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitScreenActionPerformed(evt);
            }
        });
        File.add(ExitScreen);

        jMenuBar1.add(File);

        Edit.setText("Edit");

        CloseAcc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        CloseAcc.setText("Close Account");
        CloseAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseAccActionPerformed(evt);
            }
        });
        Edit.add(CloseAcc);

        AddNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        AddNew.setText("Add New Account");
        AddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNewActionPerformed(evt);
            }
        });
        Edit.add(AddNew);

        jMenuBar1.add(Edit);

        BankAPI.setText("About");
        BankAPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BankAPIActionPerformed(evt);
            }
        });

        API.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK));
        API.setText("API");
        API.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                APIActionPerformed(evt);
            }
        });
        BankAPI.add(API);

        jMenuBar1.add(BankAPI);

        Help.setText("Help");
        Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpActionPerformed(evt);
            }
        });

        Rates.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        Rates.setText("Exchange Rates");
        Rates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RatesActionPerformed(evt);
            }
        });
        Help.add(Rates);

        Fees.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.SHIFT_MASK));
        Fees.setText("Fees and Charges");
        Fees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FeesActionPerformed(evt);
            }
        });
        Help.add(Fees);

        jMenuBar1.add(Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Connects to a specific database
 */
    public void dbConn()
    {
	try	
	{		// load the jdbc-odbc bridge driver manager
		//Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
		
			// driver to use with named database
		//String url = "jdbc:odbc:driver={Microsoft Access Driver (*.mdb)};DBQ=c:\\Bank\\Bank.mdb";
            String url = "jdbc:ucanaccess://c:/Bank/Bank.mdb";
  	
			// connection represents a session with a specific database
		con = DriverManager.getConnection(url);

			// stmt used for executing sql statements and obtaining results
		stmt = con.createStatement();

		rs = stmt.executeQuery("SELECT * FROM Account");

		while(rs.next())	// count number of rows in table
			count++;
		rs.close();
	}
	catch(Exception e) { System.out.println("Error in start up......");}
    }
/**
 * Initializes information from the database to the GUI
 */    
private void initDB()
    {
	try		// display database info in gui
	{
		rs = stmt.executeQuery("SELECT * FROM Account");
		rs.next();   

		CustName = rs.getString("CustName");
   		CustAcc = rs.getString("CustAcc");
		AccBal = rs.getString("AccBal");
                PhoneNbr = rs.getString("PhoneNo");
                AcctType = rs.getString("AccType");
                Currency = rs.getString("Currency");
                CustAddress=rs.getString("Address");
                LoanAmount=rs.getString("LoanAmount");
                LoanDur=rs.getInt("LoanDuration");
		cName.setText(CustName);
		aNum.setText(CustAcc);
		accBal.setText(AccBal);
                PhoneNo.setText(PhoneNbr);
                address.setText(CustAddress);
                loan.setText(LoanAmount);
                duration.setValue(LoanDur);
		current = 1;
		rs.close();
                
                Curr.setSelectedItem(Currency);
                if("Deposit".equals(AcctType))
                    Deposit.setSelected(true);
                else if("Student".equals(AcctType))
                    Student.setSelected(true);
                else if("Current".equals(AcctType))
                     Current.setSelected(true);
                
	}
	catch(Exception e) {System.out.println("Error in initialising DB info to GUI");}
    }
/**
 * Moves to a specified row in the database and displays it to the GUI
 * @param index String value to hold the specified database row
 */
    public void moveToRow(int index)
    {
	try
	{
		rs = stmt.executeQuery("SELECT * FROM Account");
		
		for(int i = 0; i < index; i++)
			rs.next();  	// move to specific row in table (at index)

		CustName = rs.getString("CustName");
   		CustAcc = rs.getString("CustAcc");		// get info by type
		AccBal = rs.getString("AccBal");
                PhoneNbr = rs.getString("PhoneNo");
                AcctType = rs.getString("AccType");
                Currency = rs.getString("Currency");
                CustAddress=rs.getString("Address");
                LoanAmount=rs.getString("LoanAmount");
                LoanDur=rs.getInt("LoanDuration");
		cName.setText(CustName);
		aNum.setText(CustAcc);
		accBal.setText(AccBal);
                PhoneNo.setText(PhoneNbr);
                address.setText(CustAddress);
                loan.setText(LoanAmount);
                duration.setValue(LoanDur);
		current = index;
                Curr.setSelectedItem(Currency);
                if("Deposit".equals(AcctType))
                    Deposit.setSelected(true);
                else if("Student".equals(AcctType))
                    Student.setSelected(true);
                else if("Current".equals(AcctType))
                     Current.setSelected(true);
		rs.close();
	}
	catch(Exception e) {System.out.println("Error in moving to row at index specified");}
    }
/**
 * Finds the specific account holder from the database
 * @param nameToFind String value to hold the name value search variable
 */
    public void findCust(String nameToFind)
    {
	int foundCust = 0;
	boolean found = false;
			
	try		// get name to search database for, use .equals() to match names
	{
		System.out.println("Finding: " +nameToFind);
		rs = stmt.executeQuery("SELECT * FROM Account");

		while(rs.next() && found == false)
		{
			foundCust++;
			String CustName = rs.getString("CustName");			
			CustName.trim();	
						
			if(CustName.equals(nameToFind))
				found = true;
		}
		rs.close();
	}
	catch(Exception e) {System.out.println("Error in finding Customer in database");}

	if(found == true)
		moveToRow(foundCust);
	else
		cName.setText("Not Found");	
    }

            
    public void actionPerformed(ActionEvent event)
    {
	Object target = event.getSource();
	
    }
     
    
    /**
     * Sets customer account type to Student 
     * @param evt listens to the Student radio button
     */
    private void StudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentActionPerformed
        if (Student.isSelected())
           AcctType = "Student";        // TODO add your handling code here:
    }//GEN-LAST:event_StudentActionPerformed
/**
 * Closes the BankOfIrelandUI and opens the Rates form
 * @param evt Listens to the ForeignEx button click
 */
    private void ForeignExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForeignExActionPerformed
            this.dispose();
            Rates r= new Rates();
            r.setVisible(true);         // TODO add your handling code here:
    }//GEN-LAST:event_ForeignExActionPerformed
/**
 * Closes the form, displays Message Box with beep sound
 * @param evt listens to the Exit button being clicked.
 */
    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
          JOptionPane.showMessageDialog(BankOfIrelandUI.this,
    "You are about to exit the system",
    "System Exit", JOptionPane.PLAIN_MESSAGE);
        System.exit(0);
       // TODO add your handling code here:
    }//GEN-LAST:event_ExitActionPerformed
/**
 * Deletes specified account information from database
 * @param evt listens to Close button click
 */
    private void CloseACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseACActionPerformed
    
    try	// get name to delete from database, use preparedstmt with wildcard
		{
			CustName = cName.getText();
			
			PreparedStatement pstmt = con.prepareStatement("DELETE FROM ACCOUNT WHERE CustName = ?");
			pstmt.setString(1,CustName);
			pstmt.executeUpdate();

			System.out.println(CustName +" deleted from database");

			count --;
		}
		catch(Exception e) {System.out.println("Error in delete button");}
                cName.setText("");
		aNum.setText("");
		accBal.setText("");
                PhoneNo.setText("");
                address.setText("");
                loan.setText("");
                Toolkit.getDefaultToolkit().beep();
             JOptionPane.showMessageDialog(BankOfIrelandUI.this,
    "Account Closed",
    "Account Closure", JOptionPane.PLAIN_MESSAGE);   // TODO add your handling code here:
    }//GEN-LAST:event_CloseACActionPerformed

    private void cNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cNameActionPerformed
            // TODO add your handling code here:
    }//GEN-LAST:event_cNameActionPerformed
/**
 * Finds the specific account holder from the database
 * @param evt listens to Search button click
 */
    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
    try
		{
			CustName = cName.getText();
			findCust(CustName);
		}
		catch(Exception e) {System.out.println("Error in find button");}   
    Toolkit.getDefaultToolkit().beep();// TODO add your handling code here:
    }//GEN-LAST:event_findActionPerformed
/**
 * Moves to the next row in the database and displays it to the GUI
 * @param evt Event listens to the Next button click
 */
    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed
            if(current != count)
			moveToRow(current+1);        
// TODO add your handling code here:
    }//GEN-LAST:event_NextActionPerformed
/**
 * Inserts a new record into the database from the GUI components using an SQL statement
 * Displays message confirming creation of new account in the database
 * @param evt Event listens to the Open button click
 */
    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
try
		{
			
			String Acc = aNum.getText();
                        String Name = cName.getText();
			String Bal =  accBal.getText();
                        String PNbr=PhoneNo.getText();
                        String cAdd=address.getText();
                        String Currency = (String)Curr.getSelectedItem();
                        String LnAmt=loan.getText();
                        int LonDur=duration.getValue();
                        

			String newAcc = "INSERT INTO Account(CustAcc,CustName,AccBal,PhoneNo,AccType,Currency,Address,LoanAmount,LoanDuration)VALUES('"+Acc+"','"+Name+"','"+Bal+"','"+PNbr+"','"+AcctType+"','"+Currency+"','"+cAdd+"','"+LnAmt+"','"+LonDur+"')";
			stmt.executeUpdate(newAcc);

			System.out.println(CustAcc +" stored in database");
		}
		catch(Exception e) {System.out.println("Error in creating new Account row in database"); e.printStackTrace();}

		count++; 
Toolkit.getDefaultToolkit().beep();                
JOptionPane.showMessageDialog(BankOfIrelandUI.this,
    "Account Opened!",
    "Open Account", JOptionPane.PLAIN_MESSAGE);
    // TODO add your handling code here:
    }//GEN-LAST:event_OpenActionPerformed
 /**
  * Sets the account type for customer
  * @param event listens to radio buttons 
  */
    public void itemStateChanged(ItemEvent event)
    {
       if (event.getItemSelectable() == Deposit)
           AcctType = "Deposit";
       if (event.getItemSelectable() == Current)
           AcctType = "Current";
        if (event.getItemSelectable() == Student)
           AcctType = "Student";
       
    }
 /**
  * Moves to previous row in database table
  * @param evt listens to click of Previous button
  */
    private void PreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreviousActionPerformed
                    if(current != 1)
			moveToRow(current-1);    // TODO add your handling code here:
    }//GEN-LAST:event_PreviousActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateActionPerformed
/**
 * Clears the relevant fields on the GUI
 * @param evt listens to the Clear button click
 */
    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
                cName.setText("");
		aNum.setText("");
		accBal.setText("");
                PhoneNo.setText("");
                address.setText("");
                loan.setText("");
                Toolkit.getDefaultToolkit().beep();
                
                // TODO add your handling code here:
    }//GEN-LAST:event_ClearActionPerformed

    private void accBalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accBalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accBalActionPerformed
/**
 * Sets the account type to Deposit if the related radio button is selected by user
 * @param evt listens to the Deposit radio button
 */
    private void DepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepositActionPerformed
        if (Deposit.isSelected())
           AcctType = "Deposit";// TODO add your handling code here:
    }//GEN-LAST:event_DepositActionPerformed
/**
 * Closes the GUI and exits the system when the exit menu item is clicked
 * @param evt listens to the Exit menu item click
 */
    private void ExitScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitScreenActionPerformed
JOptionPane.showMessageDialog(BankOfIrelandUI.this,
    "You are about to exit. Confirm?",
    "Exit", JOptionPane.PLAIN_MESSAGE);
    Toolkit.getDefaultToolkit().beep();
    System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_ExitScreenActionPerformed
/**
 * Displays the API for the Bank Of Ireland program
 * @param evt listens to the API menu item click 
 */
    private void APIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_APIActionPerformed

   			        // TODO add your handling code here:
    }//GEN-LAST:event_APIActionPerformed
    /**
     * Opens the FXRates form and closes the BankOfIrelandUI form
     * @param evt listens to the Exchange Rates menu item selection
     */
    private void RatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RatesActionPerformed
            this.dispose();
            Rates r= new Rates();
            r.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_RatesActionPerformed
/**
 * Deletes the specified customer record from the database and displays a message with a beep sound
 * @param evt listens to the Close menu item selection
 */
    private void CloseAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseAccActionPerformed

   JOptionPane.showMessageDialog(BankOfIrelandUI.this,
    "Confirm Account Closure",
    "Exit", JOptionPane.PLAIN_MESSAGE);
     Toolkit.getDefaultToolkit().beep();
        
        try	// get name to delete from database, use preparedstmt with wildcard
		{
			CustName = cName.getText();
			
			PreparedStatement pstmt = con.prepareStatement("DELETE FROM ACCOUNT WHERE CustName = ?");
			pstmt.setString(1,CustName);
			pstmt.executeUpdate();

			System.out.println(CustName +" deleted from database");

			count --;
		}
		catch(Exception e) {System.out.println("Error in delete button");}
                cName.setText("");
		aNum.setText("");
		accBal.setText("");
                PhoneNo.setText("");
                address.setText("");
                loan.setText("");
                // TODO add your handling code here:
                                            // TODO add your handling code here:
    }//GEN-LAST:event_CloseAccActionPerformed
/**
 * Opens the FeesAndCharges screen to display Bank charges and fees
 * closes the BankOfIrelandUI
 * @param evt Listens for the Fees and Charges menu item click
 */
    private void FeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FeesActionPerformed
            this.dispose();
            FeesAndCharges fc= new FeesAndCharges();
            fc.setVisible(true);       // TODO add your handling code here:
                      // TODO add your handling code here:
    }//GEN-LAST:event_FeesActionPerformed
/**
 * Inserts a new row in the database via an SQL statement
 * @param evt listens to the Add New Account menu item click 
 */
    private void AddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNewActionPerformed
JOptionPane.showMessageDialog(BankOfIrelandUI.this,
    "Open New Account. Confirm?",
    "Exit", JOptionPane.PLAIN_MESSAGE);
        
        try
		{
			
			String Acc = aNum.getText();
                        String Name = cName.getText();
			String Bal =  accBal.getText();
                        String PNbr=PhoneNo.getText();
                        String AcctType=LoanLength.getText();
                        String cAdd=address.getText();
                        String Currency = (String)Curr.getSelectedItem();
                        String LnAmt=loan.getText();
                        int LonDur=duration.getValue();

			String newAcc = "INSERT INTO Account(CustAcc,CustName,AccBal,PhoneNo,AccType,Address,LoanAmount,LoanDuration)VALUES('"+Acc+"','"+Name+"','"+Bal+"','"+PNbr+"','"+AcctType+"','"+Currency+"','"+cAdd+"','"+LnAmt+"','"+LonDur+"')";
			stmt.executeUpdate(newAcc);

			System.out.println(CustAcc +" stored in database");
		}
		catch(Exception e) {System.out.println("Error in creating new Account row in database"); e.printStackTrace();}

		count++;
                JOptionPane.showMessageDialog(BankOfIrelandUI.this,
    "Account Created!",
    "New Account", JOptionPane.PLAIN_MESSAGE);// TODO add your handling code here:
    }//GEN-LAST:event_AddNewActionPerformed

    private void CurrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CurrActionPerformed
/**
 * Sets user account type to Current if the Current Radio button is selected 
 * @param evt listens to the Current Radio button
 */
    private void CurrentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrentActionPerformed
            if (Current.isSelected())
           AcctType = "Current";        // TODO add your handling code here:
    }//GEN-LAST:event_CurrentActionPerformed

    private void HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpActionPerformed
                  // TODO add your handling code here:
    }//GEN-LAST:event_HelpActionPerformed
/**
 * Sets the value of the duration of the account holders loan
 * @param evt listens to duration sliders position
 */
    private void durationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_durationStateChanged

    	{
    		LoanDur = duration.getValue();
                
    	}
        
           // TODO add your handling code here:
    }//GEN-LAST:event_durationStateChanged
/**
 * Finds the specified customer from the database using the customer name as a search variable
 * @param evt listens to the Customer Search menu item click
 */
    private void CustSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustSearchActionPerformed
    try
		{
			CustName = cName.getText();
			findCust(CustName);
		}
		catch(Exception e) {System.out.println("Error in find button");}   
                Toolkit.getDefaultToolkit().beep();        // TODO add your handling code here:
    }//GEN-LAST:event_CustSearchActionPerformed
/**
 * Clears all fields on the GUI
 * @param evt listens to the Clear Details menu item click
 */
    private void ClearDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearDetailsActionPerformed
                cName.setText("");
		aNum.setText("");
		accBal.setText("");
                PhoneNo.setText("");
                address.setText("");
                loan.setText("");
                Toolkit.getDefaultToolkit().beep();        // TODO add your handling code here:
    }//GEN-LAST:event_ClearDetailsActionPerformed
/**
 * Displays the API
 * @param evt listens to the API menu item click 
 */
    private void BankAPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BankAPIActionPerformed
                        try
					{
     		 				Desktop desktop = null;
     		 				if (Desktop.isDesktopSupported())
						{
       			 				desktop = Desktop.getDesktop();
      						}
       						desktop.open(new File("E:\\JAVA PROJECT\\BankOfIrelandBK\\dist\\javadoc\\index.html"));
    					}
					catch (IOException ee)
					{
     		 				ee.printStackTrace();
   	 				}        // TODO add your handling code here:
    }//GEN-LAST:event_BankAPIActionPerformed

    /**Main method is the starting point for the application
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankOfIrelandUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankOfIrelandUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankOfIrelandUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankOfIrelandUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankOfIrelandUI().setVisible(true);
            }
        });
    }
/**
 * Initializes the components to the GUI
 */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem API;
    private javax.swing.JLabel AType1;
    private javax.swing.JLabel Account;
    private javax.swing.JMenuItem AddNew;
    private javax.swing.JLabel Balance;
    private javax.swing.JMenu BankAPI;
    private javax.swing.JLabel BankLogo;
    private javax.swing.JButton Clear;
    private javax.swing.JMenuItem ClearDetails;
    private javax.swing.JButton CloseAC;
    private javax.swing.JMenuItem CloseAcc;
    private javax.swing.JLabel CuAddress;
    private javax.swing.JComboBox Curr;
    private javax.swing.JLabel CurrencyLbl;
    private javax.swing.JRadioButton Current;
    private javax.swing.JMenuItem CustSearch;
    private javax.swing.JRadioButton Deposit;
    private javax.swing.JMenu Edit;
    private javax.swing.JButton Exit;
    private javax.swing.JMenuItem ExitScreen;
    private javax.swing.JMenuItem Fees;
    private javax.swing.JMenu File;
    private javax.swing.JButton ForeignEx;
    private javax.swing.JMenu Help;
    private javax.swing.JLabel LoanLength;
    private javax.swing.JLabel Name;
    private javax.swing.JButton Next;
    private javax.swing.JButton Open;
    private javax.swing.JTextField PhoneNo;
    private javax.swing.JLabel PhoneNr;
    private javax.swing.JButton Previous;
    private javax.swing.JMenuItem Rates;
    private javax.swing.JRadioButton Student;
    private javax.swing.JButton Update;
    private javax.swing.JTextField aNum;
    private javax.swing.JTextField accBal;
    private javax.swing.JTextField address;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cName;
    private javax.swing.JSlider duration;
    private javax.swing.JButton find;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lAmt;
    private javax.swing.JTextField loan;
    // End of variables declaration//GEN-END:variables
}
